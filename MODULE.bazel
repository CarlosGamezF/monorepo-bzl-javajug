
## MODULE.bazel
module(
    name = "monorepo-bzl-javajug",
    repo_name = "monorepo-bzl-javajug",
)

# Java rules for Bazel
# https://github.com/bazelbuild/rules_java
bazel_dep(name = "rules_java", version = "8.11.0")

# Rules for testing Java code
# https://github.com/bazel-contrib/contrib_rules_jvm
bazel_dep(name = "contrib_rules_jvm", version = "0.28.0")

# Transitive Maven artifact resolution and publishing rules for Bazel.
# https://github.com/bazel-contrib/rules_jvm_external
bazel_dep(name = "rules_jvm_external", version = "6.6")

maven = use_extension("@rules_jvm_external//:extensions.bzl", "maven")

maven.install(
    artifacts = [
        "org.springframework.boot:spring-boot-starter-web:3.4.4",

        # Test
        "org.springframework.boot:spring-boot-starter-test:3.4.4",
        "org.junit.platform:junit-platform-launcher:1.12.2",
        "org.junit.platform:junit-platform-reporting:1.12.2"


    ],
    repositories = [
        "https://repo1.maven.org/maven2",
    ],
)

use_repo(maven, "maven")

# Spring Rules for Bazel
# https://github.com/salesforce/rules_spring
bazel_dep(name = "rules_spring", version = "2.6.3")

# Go rules for Bazel
# https://github.com/bazel-contrib/rules_go
bazel_dep(name = "rules_go", version = "0.54.0")

# Gazelle build file generator
# https://github.com/bazel-contrib/bazel-gazelle
bazel_dep(name = "gazelle", version = "0.43.0")


# Python rules for Bazel
# https://github.com/bazel-contrib/rules_python
bazel_dep(name = "rules_python", version = "1.3.0")

pip = use_extension("@rules_python//python/extensions:pip.bzl", "pip")
pip.parse(
    hub_name = "pypi",
    python_version = "3.11",
    requirements_lock = ":requirements.txt",
)
use_repo(pip, "pypi")


# Rules for building and testing TypeScript and JavaScript code
bazel_dep(name = "rules_apple", version = "3.20.1")
bazel_dep(name = "aspect_rules_js", version = "2.3.5")
bazel_dep(name = "aspect_rules_swc", version = "2.4.1")
bazel_dep(name = "aspect_rules_ts", version = "3.5.2")
bazel_dep(name = "aspect_rules_webpack", version = "0.17.0")
bazel_dep(name = "rules_nodejs", version = "6.3.4")

node = use_extension("@rules_nodejs//nodejs:extensions.bzl", "node", dev_dependency = True)
node.toolchain(node_version = "20.13.1")

pnpm = use_extension("@aspect_rules_js//npm:extensions.bzl", "pnpm", dev_dependency = True)
use_repo(pnpm, "pnpm")

npm = use_extension("@aspect_rules_js//npm:extensions.bzl", "npm", dev_dependency = True)
npm.npm_translate_lock(
    name = "npm",
    npmrc = "//:.npmrc",
    pnpm_lock = "//:pnpm-lock.yaml",
    public_hoist_packages = {
        "@next/eslint-plugin-next": ["next.js"],
        "eslint-config-react-app": ["react"],
        "eslint@8.28.0": ["react"],
    },
    verify_node_modules_ignored = "//:.bazelignore",
)
use_repo(npm, "npm")

rules_ts_ext = use_extension(
    "@aspect_rules_ts//ts:extensions.bzl",
    "ext",
    dev_dependency = True,
)
rules_ts_ext.deps()
use_repo(rules_ts_ext, "npm_typescript")
